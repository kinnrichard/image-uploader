name: Build and Deploy to Digital Ocean

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  REGISTRY: registry.digitalocean.com
  IMAGE_NAME: image-uploader

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test
      
  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        
    - name: Build container image
      run: docker build -t $REGISTRY/${{ secrets.DO_REGISTRY_NAME }}/$IMAGE_NAME:$GITHUB_SHA .
      
    - name: Log in to DO Container Registry
      run: doctl registry login --expiry-seconds 1200
      
    - name: Push image to DO Container Registry
      run: docker push $REGISTRY/${{ secrets.DO_REGISTRY_NAME }}/$IMAGE_NAME:$GITHUB_SHA
      
    - name: Tag as latest
      run: |
        docker tag $REGISTRY/${{ secrets.DO_REGISTRY_NAME }}/$IMAGE_NAME:$GITHUB_SHA $REGISTRY/${{ secrets.DO_REGISTRY_NAME }}/$IMAGE_NAME:latest
        docker push $REGISTRY/${{ secrets.DO_REGISTRY_NAME }}/$IMAGE_NAME:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        
    - name: Deploy to Digital Ocean App Platform
      run: |
        doctl apps create-deployment ${{ secrets.DO_APP_ID }} --format ID --no-header --wait